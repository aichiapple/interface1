{"name": "test_login[args0]", "status": "broken", "statusDetails": {"message": "TypeError: __init__() got an unexpected keyword argument 'resultWriteExcel'", "trace": "args = {'actual': None, 'body': \"{'username':'qiaort','password':'po4xcjK0hX8rifDZqEWecg==','captcha':'','checkType':'pwd','language':'zh_CN_'}\", 'casename': '测试登录', 'expect': \"{'code':200}\", ...}\n\n    @pytest.mark.parametrize('args',read_yaml('%s/data/data_yaml/1.登录.yaml' % base_dir)['cases'])\n    def test_login(args):\n        print(str(args))\n        \"\"\"登录接口，获取token\"\"\"\n        url=args['url']\n        headers=eval(args['head'])\n        payloads=json.dumps(eval(args['body']))\n        params=eval(args['body'])\n        method=args['method']\n        run_result_txt='%s/data/run_result.txt' % base_dir\n        expect=args['expect']\n>       res=request_utl(method=method,url=url,headers=headers,payloads=payloads,params=params,expect=expect,run_result_txt=run_result_txt,\n                        resultWriteExcel='%s/data/case_excel/MCC自动化测试表格',resultWriteSheet='1.登录')\n\ntestcase\\test_login.py:17: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nmethod = 'post', url = 'https://cocreatinguat.midea.com/api/authorization/login'\nheaders = {'Accept': 'application/json, text/plain, */*', 'Content-Type': 'application/x-www-form-urlencoded;charset=UTF-8'}\npayloads = {'captcha': '', 'checkType': 'pwd', 'language': 'zh_CN_', 'password': 'po4xcjK0hX8rifDZqEWecg==', ...}\nparams = {'captcha': '', 'checkType': 'pwd', 'language': 'zh_CN_', 'password': 'po4xcjK0hX8rifDZqEWecg==', ...}\nexpect = \"{'code':200}\"\nrun_result_txt = 'E:\\\\jenkins\\\\interface/data/run_result.txt'\nresultWriteExcel = '%s/data/case_excel/MCC自动化测试表格', resultWriteSheet = '1.登录'\n\n    def request_utl(method,url,headers,payloads,params=None,expect=None,run_result_txt=None,resultWriteExcel=None,resultWriteSheet=None):\n        if method=='get':\n            res=requests.get(url=url,headers=headers,params=params)\n            assertion=expect in res.text\n            if assertion:\n                assert assertion\n                #将运行结果写入txt\n                write_text(text_file=run_result_txt,data=res.text+\"__pass|\")\n                # 根据sheet名返回执行结果写入excel\n                ExcelUtil(resultWriteExcel=resultWriteExcel).write_excel(resultWriteSheet=resultWriteSheet)\n            else:\n                write_text(text_file=run_result_txt,data=res.text+\"__fail|\")\n        elif method=='post':\n            payloads=json.loads(payloads)\n            res=requests.post(url=url,data=payloads,headers=headers)\n            assertion =expect in res.text\n            if assertion:\n                assert assertion\n                # 将运行结果写入txt\n                write_text(text_file=run_result_txt, data=res.text + \"__pass|\")\n                #根据sheet名返回执行结果写入excel\n                ExcelUtil(resultWriteExcel=resultWriteExcel).write_excel(resultWriteSheet=resultWriteSheet)\n            else:\n                write_text(text_file=run_result_txt, data=res.text + \"__fail|\")\n                # 根据sheet名返回执行结果写入excel\n>               ExcelUtil(resultWriteExcel=resultWriteExcel).write_excel(resultWriteSheet=resultWriteSheet)\nE               TypeError: __init__() got an unexpected keyword argument 'resultWriteExcel'\n\ncommon\\request_util.py:31: TypeError"}, "parameters": [{"name": "args", "value": "{'id': 1, 'body': \"{'username':'qiaort','password':'po4xcjK0hX8rifDZqEWecg==','captcha':'','checkType':'pwd','language':'zh_CN_'}\", 'casename': '测试登录', 'head': \"{'Content-Type':'application/x-www-form-urlencoded;charset=UTF-8','Accept':'application/json, text/plain, */*'}\", 'method': 'post', 'url': 'https://cocreatinguat.midea.com/api/authorization/login', 'expect': \"{'code':200}\", 'actual': None, 'valiadate': '{\"code\":200}'}"}], "start": 1721834678283, "stop": 1721834678627, "uuid": "ba4afe2e-aba9-40e4-bf79-d550ef843222", "historyId": "031f3fa3f3aa6a3a2cf34bb24b7b45dc", "testCaseId": "5c2b9153db6534bb5ca7321039f75f69", "fullName": "testcase.test_login#test_login", "labels": [{"name": "parentSuite", "value": "testcase"}, {"name": "suite", "value": "test_login"}, {"name": "host", "value": "LAPTOP-G7ADVSFE"}, {"name": "thread", "value": "12960-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "testcase.test_login"}]}